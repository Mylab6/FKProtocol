function init(self)
	msg.post(".", "acquire_input_focus")  -- Necessary for receiving inputs
end

function on_input_a(self, action_id, action)
	if action_id == hash("click") and action.pressed then
		local button_node = gui.get_node("pauseButton")

		-- msg.post("main.collection:/go//Ship#ShipMovement"
		if gui.pick_node(button_node, action.x, action.y) then
			print("Button was pressed")
			-- Trigger game logic, change scenes, etc.
		end
	end
end



function on_input(self, action_id, action)
    if action_id == hash("touch") then
        local left_button = gui.get_node("left_button")
        local right_button = gui.get_node("right_button")
        
        if action.pressed then
            if gui.pick_node(left_button, action.x, action.y) then
                msg.post("/Ship#ShipMovement", "move_left")  -- Replace '/ship#ship_script' with the actual URL of your ship script
            elseif gui.pick_node(right_button, action.x, action.y) then
                msg.post("/Ship#ShipMovement", "move_right")
            end
        elseif action.released then
            -- Optionally send a stop message when the buttons are released
            msg.post("/Ship#ShipMovement", "stop_movement")
        end
    end
end
function on_message(self, message_id, message, sender)
	-- Handle messages from other scripts or game objects
	if message_id == hash("update_score") then
		gui.set_text(gui.get_node("score_label"), "Score: " .. message.score)
	end
end

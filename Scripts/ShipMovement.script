function init(self)
    msg.post(".", "acquire_input_focus")  -- Acquires input focus for this game object
    self.speed = 200  -- Speed of the ship
    self.move_direction = 0  -- Movement direction; -1 for left, 1 for right, 0 for stationary
	self.left_bound = -300
    self.right_bound = 300
end

function on_message(self, message_id, message, sender)
    if message_id == hash("set_dimensions") then
        -- Adjust right boundary based on the screen width
        self.right_bound = message.width /2 
		self.left_bound = -self.right_bound
    end
end

function on_input(self, action_id, action)
    -- Check for right and left key presses and releases
    if action_id == hash("right") then
        if action.pressed then
            self.move_direction = 1  -- Move right
        elseif action.released then
            self.move_direction = 0  -- Stop moving if the right key is released
        end
    elseif action_id == hash("left") then
        if action.pressed then
            self.move_direction = -1  -- Move left
        elseif action.released then
            self.move_direction = 0  -- Stop moving if the left key is released
        end
    end
end

function update(self, dt)
    if self.move_direction ~= 0 then
        -- Calculate new position based on current direction and speed
        local pos = go.get_position()
        pos.x = pos.x + self.speed * self.move_direction * dt
		if pos.x < self.left_bound then
            pos.x = self.left_bound
        elseif pos.x > self.right_bound then
            pos.x = self.right_bound
        end

        go.set_position(pos)
    end
end
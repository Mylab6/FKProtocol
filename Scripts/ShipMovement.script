local game_manager = require "game_manager"

go.property("speed", 200)
go.property("shoot_interval", 0.3)

function init(self)
    self.paused = false
    msg.post(".", "acquire_input_focus")  -- Acquires input focus for this game object
   --self.speed = 200  -- Speed of the ship
    self.move_direction = 0  -- Movement direction; -1 for left, 1 for right, 0 for stationary
	self.left_bound = -300
    self.right_bound = 300
    self.timer = 0  -- Timer to control shooting interval
   -- self.shoot_interval = 0.2 -- Time interval between shots
end

function on_message(self, message_id, message, sender)
    if message_id == hash("set_dimensions") then
        -- Adjust right boundary based on the screen width
        self.right_bound = message.width /2 
		self.left_bound = -self.right_bound
    end
    if message_id == hash("pause_game") then
        self.paused = not self.paused 
        print("Paused: " .. tostring(self.paused))
    end
	if message_id == hash("move_left") then
        self.move_direction = -1
    elseif message_id == hash("move_right") then
        self.move_direction = 1
    elseif message_id == hash("stop_movement") then
        self.move_direction = 0
    end
end

function on_input(self, action_id, action)
    -- Check for right and left key presses and releases
    if action_id == hash("right") then
        if action.pressed then
            self.move_direction = 1  -- Move right
        elseif action.released then
            self.move_direction = 0  -- Stop moving if the right key is released
        end
    elseif action_id == hash("left") then
        if action.pressed then
            self.move_direction = -1  -- Move left
        elseif action.released then
            self.move_direction = 0  -- Stop moving if the left key is released
        end
    end
end

function shoot(self, pos)
    print("Shooting")
    --local pos = go.get_position()  -- Get the current position of the ship
    local bullet_properties = { speed = 700 }  -- Properties to pass to the bullet script
    print(pos)
   -- pos = pos + vmath.vector3(20, 20, 0)
    local component = "#PlayerMissileFactory"
    factory.create(component, pos)
    -- local bullet_id = factory.create("#PlayerMissileFactory", pos, nil, bullet_properties, 1.0)
    -- Optionally set the initial velocity or direction for the bullet here if needed
end

function update(self, dt)
    if game_manager.is_paused then
        return
    end
    if self.move_direction ~= 0 then
        -- Calculate new position based on current direction and speed
        local pos = go.get_position()
        pos.x = pos.x + self.speed * self.move_direction * dt
		if pos.x < self.left_bound then
            pos.x = self.left_bound
        elseif pos.x > self.right_bound then
            pos.x = self.right_bound
        end

        go.set_position(pos)
    end

    if  self.move_direction == 0  then
        self.timer = self.timer + dt
        if self.timer >= self.shoot_interval then
            self.timer = 0  -- Reset timer after shooting
            shoot(pos)  -- Call the shoot function
        end
    else
        self.timer = 0  -- Reset timer if the ship starts moving
    end
end

